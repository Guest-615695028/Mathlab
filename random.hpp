#include "basics.hpp"
namespace Mathlab {
	/*
	w - the power of two that determines the range of values generated by the engine
	n - the degree of recurrence
	m - the middle word, an offset used in the recurrence relation defining the series x, 1 <= m < n
	r - the number of bits of the lower bit-mask, 0 <= r <= w-1, also known as the twist value
	a - the conditional xor-mask, i.e. the coefficients of the rational normal form twist matrix
	u, d, s, b, t, c, l - components of the bit-scrambling (tempering) matrix
	f - the initialization multiplier
	Requirements:
	0 < m <= n; w = 2^x, x > 2
	r, u, s, t, l <= w
	a, b, c, d, f <= 2^w-1
	*/
	class MersenneTwister {
		size_t _data[12], _index, *_mt;
		public:
		constexpr MersenneTwister(size_t w, size_t n, size_t m, size_t r, size_t a,
								  size_t u, size_t d, size_t s, size_t b, size_t t, size_t c,
								  size_t l, size_t f, size_t seed = 5489)
			: _data{w, n, m, r, a, u, d, s, b, t, c, l}, _mt(new size_t[n]{seed}), _index(n) {
			// Initialize the generator from a seed
			for (size_t i = 1; i < n - 1; ++i) _mt[i] = (1 << w - 1) & (f * (_mt[i - 1] ^ (_mt[i - 1] >> (w - 2))) + i);
		}
		constexpr ~MersenneTwister() {
			delete[] _mt;
		}
		constexpr MersenneTwister(const MersenneTwister &) = delete;
		constexpr size_t operator()(unsigned long long z = 1) {
			//Create an array to store the state of the generator
			const size_t mask = (1 << _data[0]) - 1, lowermask = (1 << _data[3]) - 1,
				uppermask = ~lowermask & mask, n = _data[1];
			while (z--) {
				if (++_index >= n) for (size_t i = _index = 0; i < n; ++i) {
					int x = (_mt[i] & uppermask) | (_mt[(i + 1) % n] & lowermask);
					_mt[i] = _mt[(i + _data[2]) % n] ^ (x >> 1 ^ (x & 1 ? _data[4] : 0));
				}
			}
			size_t y = _mt[_index];
			for (int i = 5; i < 10; i += 2) y ^= y >> _data[i] & _data[i + 1];
			return (1ull << _data[0]) - 1 & (y ^ y >> _data[11]);
		}
	};
	constexpr MersenneTwister MT19937_32(size_t seed = 5489) {
		return {32, 624, 397, 31, 0X9908B0DF, 11, 0XFFFFFFFF, 7, 0X9D2C5680, 15, 0XEFC60000, 18, 0X6C078965, seed};
	}
	constexpr MersenneTwister MT19937_64(size_t seed = 5489) {
		return {64, 312, 156, 31, 0XB5026F5AA96619E9, 29, 0X5555555555555555, 17,
			0X71D67FFFEDA60000, 37, 0XFFF7EEE000000000, 43, 0X5851F42D4C957F2D, seed};
	}
}